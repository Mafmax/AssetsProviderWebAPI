// <auto-generated />
using System;
using Mafmax.AssetsProvider.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mafmax.AssetsProvider.DAL.Migrations
{
    [DbContext(typeof(APContext))]
    partial class APContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mafmax.AssetsProvider.DAL.Entities.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BaseCurrency");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LotSize")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IssuerId");

                    b.HasIndex("StockId");

                    b.ToTable("Assets");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Asset");
                });

            modelBuilder.Entity("Mafmax.AssetsProvider.DAL.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Mafmax.AssetsProvider.DAL.Entities.Industry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("Mafmax.AssetsProvider.DAL.Entities.Issuer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("IndustryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("IndustryId");

                    b.ToTable("Issuers");
                });

            modelBuilder.Entity("Mafmax.AssetsProvider.DAL.Entities.StockExchange", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockExchange");
                });

            modelBuilder.Entity("Mafmax.AssetsProvider.DAL.Entities.Bond", b =>
                {
                    b.HasBaseType("Mafmax.AssetsProvider.DAL.Entities.Asset");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.ToTable("Assets");

                    b.HasDiscriminator().HasValue("Bond");
                });

            modelBuilder.Entity("Mafmax.AssetsProvider.DAL.Entities.Share", b =>
                {
                    b.HasBaseType("Mafmax.AssetsProvider.DAL.Entities.Asset");

                    b.Property<bool>("IsPreffered")
                        .HasColumnType("bit");

                    b.ToTable("Assets");

                    b.HasDiscriminator().HasValue("Share");
                });

            modelBuilder.Entity("Mafmax.AssetsProvider.DAL.Entities.Asset", b =>
                {
                    b.HasOne("Mafmax.AssetsProvider.DAL.Entities.Issuer", "Issuer")
                        .WithMany()
                        .HasForeignKey("IssuerId");

                    b.HasOne("Mafmax.AssetsProvider.DAL.Entities.StockExchange", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");

                    b.OwnsOne("Mafmax.AssetsProvider.DAL.Entities.CirculationPeriod", "Circulation", b1 =>
                        {
                            b1.Property<int>("AssetId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime?>("End")
                                .HasColumnType("datetime2")
                                .HasColumnName("EndCirculation");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("datetime2")
                                .HasColumnName("StartCirculation");

                            b1.HasKey("AssetId");

                            b1.ToTable("Assets");

                            b1.WithOwner()
                                .HasForeignKey("AssetId");
                        });

                    b.Navigation("Circulation");

                    b.Navigation("Issuer");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Mafmax.AssetsProvider.DAL.Entities.Issuer", b =>
                {
                    b.HasOne("Mafmax.AssetsProvider.DAL.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Mafmax.AssetsProvider.DAL.Entities.Industry", "Industry")
                        .WithMany()
                        .HasForeignKey("IndustryId");

                    b.Navigation("Country");

                    b.Navigation("Industry");
                });
#pragma warning restore 612, 618
        }
    }
}
